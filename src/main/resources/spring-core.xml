<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop" 
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd" >
        
        <context:component-scan base-package="cn.sakuraffy.shop.."/> 
        
        <!-- 所有的properties文件应该交给Spring管理，而且在启动的时候加载
	 	Spring支持两种方式，property-placeholder仅仅在xml中使用，即在beans.xml中获取properties文件中的对应的value --> 
	 	<!-- 
		 <context:property-placeholder location="classpath:conn.properties"/>
		 	 -->
		 <!-- 与下面的配置等价，下面的更容易理解 -->
		 <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		 	<property name="locations">
		 		<array>
		 			<value>classpath:jdbc.properties</value>
		 		</array>
		 	</property>
		 </bean>
	        
       	<bean id="dataSourceMysql" class="org.apache.commons.dbcp.BasicDataSource"  
	        destroy-method="close">  
	        <property name="driverClassName" value="${jdbc.mysql.driver}" />  
	        <property name="url" value="${jdbc.mysql.url}" />  
	        <property name="username" value="${jdbc.mysql.username}" />  
	        <property name="password" value="${jdbc.mysql.password}" />    
	    </bean>
	    
	    <bean id="dataSourceOracle" class="org.apache.commons.dbcp.BasicDataSource"  
	        destroy-method="close">  
	        <property name="driverClassName" value="${jdbc.oracle.driver}" />  
	        <property name="url" value="${jdbc.oracle.url}" />  
	        <property name="username" value="${jdbc.oracle.username}" />  
	        <property name="password" value="${jdbc.oracle.password}" />    
	    </bean>    
	    
	    <bean id="dataSource" class="cn.sakuraffy.shop.util.datasource.DynamicDataSource">
	    	<property name="targetDataSources">
	    		<map key-type="cn.sakuraffy.shop.util.datasource.DataSourceType">
	    			<entry key="MYSQL" value-ref="dataSourceMysql" />
	    			<entry key="ORACLE" value-ref="dataSourceOracle" />
	    		</map>
	    	</property>
	    	<property name="defaultTargetDataSource" ref="dataSourceOracle"/>
	    </bean>
		
		<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">  
	        <property name="dataSource" ref="dataSource"/> 
	        <property name="configLocation" value="classpath:hibernate.cfg.xml" /> <!-- 加载hibernate配置文件 -->  
	        <property name="packagesToScan">
	        	<list>
	        		<value>cn.sakuraffy.shop.model</value>
	        	</list>
	        </property>
	        <property name="hibernateProperties">  
	            <props>
	            	<prop key="hibernate.dialect">org.hibernate.dialect.OracleDialect</prop> 
	                <prop key="show_sql">true</prop>  
	            </props>  
	        </property>  
	    </bean>  
		
		<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
	        <property name="dataSource" ref="dataSource" />
	        <property name="typeAliasesPackage" value="cn.sakuraffy.shop.model" />  
	        <!-- 自动扫描mapping.xml文件 -->  
	        <property name="mapperLocations" value="classpath:cn/sakuraffy/shop/mapper/*.xml" />  
	    </bean>  
	
	    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->  
	    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
	        <property name="basePackage" value="cn.sakuraffy.shop.mapper" />  
	        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />  
	    </bean>  
		
		<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
	        <property name="dataSource" ref="dataSource" />  
	    </bean>
		
		<tx:advice id="advice" transaction-manager="transactionManager">  
		    <tx:attributes>  
		        <tx:method name="save*" propagation="REQUIRED"/>  
		        <tx:method name="update*" propagation="REQUIRED"/>  
		        <tx:method name="delete*" propagation="REQUIRED"/>  
		        <tx:method name="*" propagation="SUPPORTS"/>  
		    </tx:attributes>  
		</tx:advice>
		
		<aop:config>  
		    <!-- 配置哪些包的类要切入事务 -->  
		    <aop:pointcut id="pointcut" expression="execution(* cn.sakuraffy.shop.service.impl.*.*(..))" />  
		    <aop:advisor advice-ref="advice" pointcut-ref="pointcut"/>
		    <!-- aop:pointcut要写在aop:advisor上面，否则会报错 -->  
		</aop:config> 
		
		<bean id="dsAdvice" class="cn.sakuraffy.shop.util.datasource.DataSourceAdvice" />
		
		<aop:config>
			<aop:pointcut id="dsPointcut" expression="execution(* cn.sakuraffy.shop.service.impl.*.*(..))" />
			<aop:advisor advice-ref="dsAdvice" pointcut-ref="dsPointcut"/>
		</aop:config>
			
</beans>